@* the page for changing the password *@
@page

@model ChangePasswordModel

@{
    ViewData["Title"] = "Change Password";
    ViewData["UserCentreFunction"] = "Change password";
    ViewData["StorePage"] = HeaderNavigation.UserCentre;
    ViewData["UserCentrePage"] = UserCentreMenu.ChangePassword;
}

<partial name="_StatusMessage" for="StatusMessage" />
<form asp-area="Identity" asp-page="/Account/Manage/ChangePassword" method="post">
    <div class="form-group">
        <div class="e-float-input e-input-group e-success">
            <input asp-for="Input.OldPassword" autofocus required />
            <span class="e-float-line"></span>
            <label asp-for="Input.OldPassword" class="e-float-text"></label>
            <span id="old-password-eye" class="e-input-group-icon fas fa-eye-slash" title="Click to show the old password." onclick="hideOrShowOldPassword()"></span>
        </div>
        <!-- the minimum and maximum length here should be equal to the relevant attributes in the specified input model -->
        <ejs-tooltip id="tooltip-old-password" content="Please enter the correct old password and notice:<br />1. At least 8 and at max 20 characters long.<br />2. At least 1 digit (0 - 9) and 1 letter.<br />3. No non-alphanumeric character." position="LeftBottom">
            <e-content-template>
                <span asp-validation-for="Input.OldPassword" class="text-danger text-justify font-weight-bold" style="font-size: 13px"></span>
            </e-content-template>
        </ejs-tooltip>
    </div>
    <div class="form-group">
        <!-- the minimum and maximum length here should be equal to the relevant attributes in the specified input model -->
        <ejs-tooltip id="tooltip-new-password" content="1. At least 8 and at max 20 characters long.<br />2. At least 1 digit (0 - 9) and 1 letter.<br />3. No non-alphanumeric character." position="LeftCenter">
            <e-content-template>
                <div class="e-float-input e-input-group e-success">
                    <input asp-for="Input.NewPassword" required />
                    <span class="e-float-line"></span>
                    <label asp-for="Input.NewPassword" class="e-float-text"></label>
                    <span id="new-password-eye" class="e-input-group-icon fas fa-eye-slash" title="Click to show the new password." onclick="hideOrShowNewPassword()"></span>
                </div>
                <div>
                    <span asp-validation-for="Input.NewPassword" class="text-danger text-justify font-weight-bold" style="font-size: 13px"></span>
                </div>
            </e-content-template>
        </ejs-tooltip>
    </div>
    <div class="form-group">
        <div class="e-float-input e-input-group e-success">
            <input asp-for="Input.ConfirmPassword" required />
            <span class="e-float-line"></span>
            <label asp-for="Input.ConfirmPassword" class="e-float-text"></label>
            <span id="confirmation-password-eye" class="e-input-group-icon fas fa-eye-slash" title="Click to show the confirmation password." onclick="hideOrShowConfirmationPassword()"></span>
        </div>
        <div class="e-control">
            <span asp-validation-for="Input.ConfirmPassword" class="text-danger text-justify font-weight-bold" style="font-size: 13px"></span>
        </div>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-success btn-block" @(!Model.IsEmailConfirmed ? "disabled" : string.Empty)>OK</button>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScripts" />
    <script type="text/javascript">
        /** Hide or show the old password in the text box for the old password according to the user's selection with the help of styles from Bootstrap 4 and Font Awesome 5. */
        function hideOrShowOldPassword() {
            var oldPasswordEye = document.getElementById("old-password-eye");
            var textBoxOldPassword = document.getElementById("Input_OldPassword");
            if (textBoxOldPassword.type == "password") {
                textBoxOldPassword.type = "text";
                oldPasswordEye.classList.remove("fa-eye-slash");
                oldPasswordEye.classList.add("e-active", "fa-eye", "fa-flip-horizontal");
                oldPasswordEye.title = "Click to hide the old password."
            } else {
                textBoxOldPassword.type = "password";
                oldPasswordEye.classList.remove("e-active", "fa-eye", "fa-flip-horizontal");
                oldPasswordEye.classList.add("fa-eye-slash");
                oldPasswordEye.title = "Click to show the old password."
            }
        }

        /** Hide or show the new password in the text box for the new password according to the user's selection with the help of styles from Bootstrap 4 and Font Awesome 5. */
        function hideOrShowNewPassword() {
            var newPasswordEye = document.getElementById("new-password-eye");
            var textBoxNewPassword = document.getElementById("Input_NewPassword");
            if (textBoxNewPassword.type == "password") {
                textBoxNewPassword.type = "text";
                newPasswordEye.classList.remove("fa-eye-slash");
                newPasswordEye.classList.add("e-active", "fa-eye", "fa-flip-horizontal");
                newPasswordEye.title = "Click to hide the new password."
            } else {
                textBoxNewPassword.type = "password";
                newPasswordEye.classList.remove("e-active", "fa-eye", "fa-flip-horizontal");
                newPasswordEye.classList.add("fa-eye-slash");
                newPasswordEye.title = "Click to show the new password."
            }
        }

        /* Add a custom client validation method to the jQuery object "validator" to validate whether 2 values are the same or not.
         * The method returns true if they are not the same; otherwise, false.
         */
        $.validator.addMethod("notSameAs", function (value, element, param) {
            var target = $(param);
            return !(value === target.val());
        });
        /* Enable the client-side unobtrusive validation for the specified custom validation attribute. */
        $.validator.unobtrusive.adapters.add("notsameas", ["other"], function (options) {
            var value = $(options.form).find(":input").filter("[name='Input." + options.params["other"] + "']")[0];
            options.rules["notSameAs"] = value;
            options.messages["notSameAs"] = options.message;
        });
    </script>
}